summary(linear_model)
set.seed(23)
iris_numeric <- iris
iris_numeric$Species <- as.numeric(iris$Species)
iris_numeric[ , c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width")] <- scale(iris_numeric[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width")])
indices <- sample(1:nrow(iris), round(0.3 * nrow(iris)))
train_labels <- iris_numeric[-indices, ]
test_labels <- iris_numeric[indices, ]
train_data <- iris_numeric[-indices, 1:4]
test_data <- iris_numeric[indices, 1:4]
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
length(test_labels)
length(train_labels)
length(train_data)
View(train_labels)
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
View(test_data)
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = train_data), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_data), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = "fart"), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
library("tidyverse")
library("gridExtra")
library("class")
require("gridExtra")
# Load in Iris
data(iris)
head(iris)
linear_model <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data = iris)
p1 <- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point()
p2 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Species)) +
geom_point()
grid.arrange(p1, p2, ncol=2)
plot(residuals(linear_model), main = "Residuals Plot", xlab = "Index", ylab = "Residuals")
summary(linear_model)
set.seed(23)
iris_numeric <- iris
iris_numeric$Species <- as.numeric(iris$Species)
iris_numeric[ , c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width")] <- scale(iris_numeric[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width")])
indices <- sample(1:nrow(iris), round(0.3 * nrow(iris)))
train_labels <- iris_numeric[-indices, ]
train_data <- iris_numeric[-indices, 1:4]
test_data <- iris_numeric[indices, 1:4]
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris_numeric[indices, 4:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
View(test_labels)
View(test_labels)
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris_numeric[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point(5) +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 3
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point(size = 4) +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 5
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 5
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=3, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 5
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=0, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 5
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=1, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
test_prediction <- knn(
train = train_data,
test = test_data,
cl = train_labels$Species,
k= 5
)
plot_predictions <- data.frame(
test_data$Sepal.Length,
test_data$Sepal.Width,
test_data$Petal.Length,
test_data$Petal.Width,
predicted = test_prediction)
plot_predictions$predicted <- factor(plot_predictions$predicted, levels = c(1, 2, 3), labels = c("setosa", "versicolor", "virginica"))
colnames(plot_predictions) <- c("Sepal.Length",
"Sepal.Width",
"Petal.Length",
"Petal.Width",
'predicted')
test_labels <- iris[indices, 5:5]
ggplot(plot_predictions, aes(Petal.Length, Petal.Width, color = predicted, fill = predicted)) +
geom_point() +
geom_text(aes(label = test_labels), hjust=0.5, vjust=2) +
ggtitle("Predicted relationship between Sepal Length and Sepal Width") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = "none")
# Load the installed Package
library(readr)
# Install the required package
install.packages("readr")
# Load the installed Package
library(readr)
install.packages("readr")
df<-readr::read_csv("C:\\Users\\Documents\\Switzerland.csv")
setwd("C:/Users/felik/Documents")
df<-readr::read_csv("Documents\\Switzerland.csv")
df<-readr::read_csv("Switzerland.csv")
print(df)
df<-readr::read_csv("Switzerland.csv")
View(df)
library(utils)
data <- read.csv("diabetes_risk_prediction_dataset.csv")
setwd("C:/Users/felik/Documents/Projects/diabetes_risk_prediction_dataset")
data <- read.csv("diabetes_risk_prediction_dataset.csv")
View(data)
data("postiv").count
nrow(class)
class_counts <- table(postiv$class)
class_counts <- table(data$class)
data("postiv")
class_counts <- table(postiv$class)
print(class_counts)
# Postiv And negativ
class_counts <- table(postiv$class)
# Postiv And negativ
class_counts <- table(data$class)
# Postiv And negativ
class_counts <- table(data$class)
ostiv
class_counts <- table(postiv$class)
library(utils)
data <- read.csv("diabetes_risk_prediction_dataset.csv")
# Postiv And negativ
data(postiv)
class_counts <- table(postiv$class)
class_counts <- table(data$class)
print(class_counts)
library(tidyverse)
ggplot(data, aes(x = data$Age, y=data$Alopecia))
ggplot(data, aes(x = Age, y=Alopecia))
ggplot(data, aes(x = Age, y=Alopecia, color = class)),
ggplot(data, aes(x = Age, y=Alopecia, color = class)) +
geom_point()
ggplot(data, aes(x = ., color = class)) +
geom_point()
ggplot(data, aes(x = ., color = class)) +
geom_point()
data <- data.asfactor()
data <- asfactor(data)
data <- as.factor(data)
